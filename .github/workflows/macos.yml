name: MacOS Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_INSTALL_DIR: ${{ github.workspace }}/.dotnet

jobs:
  BuildNugetPackages-MacOS:
    strategy:
      matrix:
        os: [self-hosted-macos-arm64,self-hosted-macos-x64]
        include:
          - os: self-hosted-macos-arm64
            arch: arm64
          - os: self-hosted-macos-x64
            arch: x64

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    defaults:
      run:
        working-directory: osx

    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - name: Restore cached packages
        id: build-packages-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ github.workspace }}/build-osx
            ${{ github.workspace }}/.dotnet
          key: ${{ runner.os }}-packages-${{ matrix.os }}

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install CMake
        run: |
          python3 -m pip install cmake

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Install deps
        run: |
          ${{ github.workspace }}/osx/before-install.sh

      - name: Fetch VCPKG packages
        run: |
          make -f vcpkg-makefile BUILD_ARCH=${{ matrix.arch }} build_cleanup
          make -f vcpkg-makefile BUILD_ARCH=${{ matrix.arch }}

      - name: Compile HDF
        run: |
          make -f gdal-makefile hdf BUILD_ARCH=${{ matrix.arch }}

      - name: Compile PROJ
        run: |
          make -f gdal-makefile proj BUILD_ARCH=${{ matrix.arch }}

      - name: Compile GDAL
        run: |
          make -f gdal-makefile gdal BUILD_ARCH=${{ matrix.arch }}

      - name: Collect deps
        run: |
          make -f collect-deps-makefile BUILD_ARCH=${{ matrix.arch }}

      - name: Create packages
        run: |
          make -f publish-makefile pack BUILD_ARCH=${{ matrix.arch }} BUILD_NUMBER_TAIL=${{ github.run_number }}

      - name: Store packages as artifact
        uses: actions/upload-artifact@v3
        with:
          name: osx-packages-${{ matrix.arch }}
          path: nuget/*.nupkg

      - name: Save packages cache
        id: build-packages-cache-save
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ github.workspace }}/build-osx
            ${{ github.workspace }}/.dotnet
          key: ${{ steps.build-packages-cache-restore.outputs.cache-primary-key }}

  TestAndPushPackages-MacOS:
    strategy:
      matrix:
        os: [self-hosted-macos-arm64,self-hosted-macos-x64]
        include:
          - os: self-hosted-macos-arm64
            arch: arm64
          - os: self-hosted-macos-x64
            arch: x64
    needs: BuildNugetPackages-MacOS
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    defaults:
      run:
        working-directory: osx

    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: osx-packages-${{ matrix.arch }}
          path: nuget/

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: NuGet - Update credentials
        run: |
          dotnet nuget update source github --store-password-in-clear-text -u ${{ secrets.API_USER_GITHUB }} -p ${{ secrets.API_KEY_GITHUB }} --configfile ../nuget.config
          dotnet nuget update source nuget.org --store-password-in-clear-text -u ${{ secrets.API_USER_NUGET }} -p ${{ secrets.API_KEY_NUGET }} --configfile ../nuget.config
          dotnet nuget remove source local || true
          dotnet nuget remove source local.ci || true
          dotnet nuget add source "${{ github.workspace}}/nuget/" --name local.ci --configfile ../nuget.config

      - name: Test packages
        run: |
          make -f test-makefile BUILD_ARCH=${{ matrix.arch }} BUILD_NUMBER_TAIL=${{ github.run_number }}

      - name: Push packages
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          make -f push-packages-makefile BUILD_ARCH=${{ matrix.arch }} BUILD_NUMBER_TAIL=${{ github.run_number }} API_KEY_GITHUB=${{ secrets.API_KEY_GITHUB }} API_KEY_NUGET=${{ secrets.API_KEY_NUGET }}