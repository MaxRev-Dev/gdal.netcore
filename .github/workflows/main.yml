name: Test packages from CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ] 

  workflow_run:
    workflows: ["MacOS Build", "Windows Build", "Linux Build"]
    branches: [main]
    types: 
      - completed

  workflow_dispatch:
    
env:
  DOTNET_INSTALL_DIR: ${{ github.workspace }}/.dotnet
  DOTNET_VERSION: '8.0.x'

jobs:
  TestNugetPackages:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    if: "${{ github.event.workflow_run.conclusion == 'success' }} && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:     
      - uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - uses: actions/download-artifact@v4
        with:
          path: nuget
            
      - name: NuGet - Update credentials
        run: | 
          dotnet nuget update source github --store-password-in-clear-text -u ${{ secrets.API_USER_GITHUB }} -p ${{ secrets.API_KEY_GITHUB }}
          dotnet nuget update source nuget.org --store-password-in-clear-text -u ${{ secrets.API_USER_NUGET }} -p ${{ secrets.API_KEY_NUGET }}

      - name: Run tests from nuget packages
        env: 
          TEST_PROJECT: tests/MaxRev.Gdal.Core.Tests.XUnit/MaxRev.Gdal.Core.Tests.XUnit.csproj  
        run: |
          dotnet restore --ignore-failed-sources ${{ env.TEST_PROJECT }}
          dotnet add ${{ env.TEST_PROJECT }} package MaxRev.Gdal.Core
          dotnet add ${{ env.TEST_PROJECT }} package MaxRev.Gdal.LinuxRuntime.Minimal
          dotnet add ${{ env.TEST_PROJECT }} package MaxRev.Gdal.WindowsRuntime.Minimal
          dotnet test --no-restore ${{ env.TEST_PROJECT }}