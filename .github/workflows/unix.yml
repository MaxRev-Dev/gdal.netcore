name: Linux Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_INSTALL_DIR: ${{ github.workspace }}/.dotnet
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  BuildNugetPackages-Linux:
    strategy:
      matrix:
        include:
          - os: linux/amd64
            arch: x64
            actions-runner: self-hosted-macos-x64
          - os: linux/arm64
            arch: arm64
            actions-runner: self-hosted-macos-arm64

    runs-on: ${{ matrix.actions-runner }}
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    defaults:
      run:
        working-directory: unix

    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Build docker image
        run: |
          docker buildx build --load --platform=${{ matrix.os }} --progress=plain -t maxrev-dev/gdal.netcore.builder:latest -f '${{ github.workspace }}/.github/workflows/Dockerfile.unix' ${{ github.workspace }}

      - name: Extract packages
        run: |
          docker create --name tmpcontainer maxrev-dev/gdal.netcore.builder:latest
          docker cp tmpcontainer:/build/nuget '${{ github.workspace }}/nuget'
          docker rm -f tmpcontainer

      - name: Store packages as artifact
        uses: actions/upload-artifact@v3
        with:
          name: unix-packages-${{ matrix.arch }}
          path: nuget/*.nupkg

  TestAndPushPackages-Linux:
    strategy:
      matrix:
        include:
          - os: linux/amd64
            arch: x64
            actions-runner: self-hosted-macos-x64
          - os: linux/arm64
            arch: arm64
            actions-runner: self-hosted-macos-arm64
    needs: BuildNugetPackages-Linux
    runs-on: ${{ matrix.actions-runner }}
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    defaults:
      run:
        working-directory: unix

    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: unix-packages-${{ matrix.arch }}
          path: nuget/

      - name: NuGet - Update credentials
        run: |
          dotnet nuget update source github --store-password-in-clear-text -u ${{ secrets.API_USER_GITHUB }} -p ${{ secrets.API_KEY_GITHUB }} --configfile ../nuget.config
          dotnet nuget update source nuget.org --store-password-in-clear-text -u ${{ secrets.API_USER_NUGET }} -p ${{ secrets.API_KEY_NUGET }} --configfile ../nuget.config
          dotnet nuget remove source local || true
          dotnet nuget remove source local.ci || true
          dotnet nuget add source "${{ github.workspace}}/nuget/" --name local.ci

      - name: Test packages
        run: |
          make -f test-makefile BUILD_ARCH=${{ matrix.arch }} BUILD_NUMBER_TAIL=${{ github.run_number }}

      - name: Push packages
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          make -f push-packages-makefile BUILD_ARCH=${{ matrix.arch }} BUILD_NUMBER_TAIL=${{ github.run_number }} API_KEY_GITHUB=${{ secrets.API_KEY_GITHUB }} API_KEY_NUGET=${{ secrets.API_KEY_NUGET }}