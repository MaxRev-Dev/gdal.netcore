name: Windows Build

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_INSTALL_DIR: ${{ github.workspace }}/.dotnet
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  BuildNugetPackages-Windows:
    strategy:
      matrix:
        os: [self-hosted-win-x64] 

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    defaults:
      run:
        working-directory: win
    steps:     
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0

      - name: Restore cached packages
        id: build-packages-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ github.workspace }}/build-win
            ${{ github.workspace }}/.dotnet
          key: ${{ runner.os }}-packages

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Compile GDAL and create packages
        id: compile-source
        run: |
          ./install.ps1 -buildNumberTail ${{ github.run_number }}
          echo "GDAL_VERSION=$env:GDAL_VERSION" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Store packages as artifact
        uses: actions/upload-artifact@v3
        with:
          name: win-packages
          path: nuget/*.nupkg

      - name: Save packages cache
        id: build-packages-cache-save
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ github.workspace }}/build-win
            ${{ github.workspace }}/.dotnet
          key: ${{ steps.build-packages-cache-restore.outputs.cache-primary-key }}
    outputs:
      gdal-version: ${{ steps.compile-source.outputs.GDAL_VERSION }}

  TestAndPushPackages-Windows:
    strategy:
      matrix:
        os: [self-hosted-win-x64] 
    needs: BuildNugetPackages-Windows
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    defaults:
      run:
        working-directory: win
    env:
      GDAL_VERSION: ${{ needs.BuildNugetPackages-Windows.outputs.GDAL_VERSION }}
    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0    

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: win-packages
          path: nuget/

      - name: NuGet - Update credentials
        run: | 
          dotnet nuget update source github --store-password-in-clear-text -u ${{ secrets.API_USER_GITHUB }} -p ${{ secrets.API_KEY_GITHUB }} --configfile ../nuget.config
          dotnet nuget update source nuget.org --store-password-in-clear-text -u ${{ secrets.API_USER_NUGET }} -p ${{ secrets.API_KEY_NUGET }} --configfile ../nuget.config
          dotnet nuget remove source local 1>$null
          dotnet nuget remove source local.ci 1>$null
          dotnet nuget add source "${{ github.workspace}}/nuget/" --name local.ci
        shell: pwsh

      - name: Test packages
        run: ./test.ps1 -buildNumberTail ${{ github.run_number }}
        shell: pwsh
      
      - name: Push packages
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          API_KEY_GITHUB: ${{ secrets.API_KEY_GITHUB }}
          API_KEY_NUGET: ${{ secrets.API_KEY_NUGET }}
        run: ./push-packages.ps1 -buildNumberTail ${{ github.run_number }}
        shell: pwsh