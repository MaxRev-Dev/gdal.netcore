
!INCLUDE RID.opt
!INCLUDE ../shared/GdalCore.opt

OUTPUT=$(ROOTDIR_)/runtimes/win-x64/native
OUTPUT=$(abspath $(OUTPUT))
BUILD_ROOT=$(abspath $(BUILD_ROOT))

SDK_ROOT=$(ROOTDIR_)/build-win/sdk/release-1930-x64

!IFDEF DEBUG
PRERELEASE_ARG=--prerelease
!ELSE
PRERELEASE_ARG= 
!ENDIF

all: pre-build 

pre-vcpkg:
	@echo $(PRE) Precheck for VCPKG libraries installation...
	$(MAKE) -f vcpkg-makefile.vc
	@echo $(PRE) VCPKG libraries precheck complete

pre-build: pre-vcpkg

post-build: collect interface pack

interface:
	$(MAKE) /f gdal-makefile.vc 

copyprojdb:
	if not exist "$(LIBSHARED)" mkdir "$(LIBSHARED)"
	$(COPY_I) "$(BASE_PROJ)/share/proj/proj.db" "$(LIBSHARED)/"

collect: copyprojdb
	if not exist "$(OUTPUT)" mkdir "$(OUTPUT)"
	$(COPY) $(abspath $(VCPKG_INSTALLED)\bin\*.dll) "$(OUTPUT)\"
	$(COPY) "$(abspath $(SDK_ROOT)\bin)\*.dll" "$(OUTPUT)\"
	$(COPY) "$(abspath $(BUILD_ROOT)\gdal-build\share\csharp)\*_wrap.dll" "$(OUTPUT)\"
	$(COPY_I) "%VCToolsRedistDir%x64\Microsoft.VC$(CRT_VERSION).CRT\*.dll" "$(OUTPUT)\"
	
	for /d %i in ($(BUILD_ROOT)\*-build) do ( cd "%i" &  $(COPY) "%i\bin\*.dll" "$(OUTPUT)\" ) 

veryclean:
	$(MAKE) -f vcpkg-makefile.vc build_cleanup
	$(MAKE) -f gdal-makefile.vc clean

# https://github.com/dotnet/core/issues/4404
hostfix31:
	set MSBUILDSINGLELOADCONTEXT=1

packc: hostfix31
	dotnet pack -c Release -o $(NUGET_) $(ROOTDIR_)/gdalcore.loader.csproj
packr: hostfix31
	dotnet pack -c Release -o $(NUGET_) $(ROOTDIR_)/gdalcore.windowsruntime.csproj
pack: hostfix31 packr packc
	

packdc: hostfix31
	dotnet pack -c Debug -o $(NUGET_) $(ROOTDIR_)/gdalcore.loader.csproj

packdr: hostfix31
	dotnet pack -c Debug -o $(NUGET_) $(ROOTDIR_)/gdalcore.windowsruntime.csproj

packdev: hostfix31 packdr packdc


test-restore:
	-cd $(TEST_DIR)
	dotnet restore -s "https://api.nuget.org/v3/index.json" -s $(NUGET_) 
	-cd $(MAKEDIR)

test-update:
	-cd $(TEST_DIR)
	dotnet add package MaxRev.Gdal.WindowsRuntime.Minimal -s $(NUGET_) $(PRERELEASE_ARG)
	dotnet add package MaxRev.Gdal.Core -s $(NUGET_) $(PRERELEASE_ARG)
	-cd $(MAKEDIR)

test-only: test-restore
	-cd $(TEST_DIR)
	dotnet test
	-cd $(MAKEDIR)

test: test-restore test-update test-only
	

test-restore-alt:
	-cd $(TEST_DIR_ALT)
	dotnet restore -s "https://api.nuget.org/v3/index.json" -s $(NUGET_) 
	-cd $(MAKEDIR)

test-update-alt:
	-cd $(TEST_DIR_ALT)
	dotnet add package MaxRev.Gdal.WindowsRuntime.Minimal -s $(NUGET_) $(PRERELEASE_ARG)
	dotnet add package MaxRev.Gdal.Core -s $(NUGET_) $(PRERELEASE_ARG)
	-cd $(MAKEDIR)

test-only-alt: test-restore-alt
	-cd $(TEST_DIR_ALT)
	dotnet run
	-cd $(MAKEDIR)

test-alt: test-restore-alt test-update-alt test-only-alt
	