#
#  gdal.netcore package automation
#

!INCLUDE RID.opt
!INCLUDE ../shared/GdalCore.opt

all: test

test-restore:
	-cd $(TEST_DIR)
	-cd "$(TEST_DIR)/../MaxRev.Gdal.Core.Tests.AzureFunctions" && dotnet remove package MaxRev.Gdal.LinuxRuntime.Minimal 
	-cd "$(TEST_DIR)/../MaxRev.Gdal.Core.Tests" && dotnet remove package MaxRev.Gdal.LinuxRuntime.Minimal
	-cd "$(TEST_DIR)/../MaxRev.Gdal.Core.Tests.XUnit" && dotnet remove package MaxRev.Gdal.LinuxRuntime.Minimal
	-cd "$(TEST_DIR)/../MaxRev.Gdal.Core.Tests.AzureFunctions" && dotnet remove package MaxRev.Gdal.Universal
	-cd "$(TEST_DIR)/../MaxRev.Gdal.Core.Tests.XUnit" && dotnet remove package MaxRev.Gdal.Universal
	-cd "$(TEST_DIR)/../MaxRev.Gdal.Core.Tests" && dotnet remove package MaxRev.Gdal.Universal
	-dotnet restore -s "https://api.nuget.org/v3/index.json" -s $(NUGET_) --ignore-failed-sources
	-cd $(MAKEDIR)

test-update:
	-cd $(TEST_TARGET_AZ)
	-dotnet add package MaxRev.Gdal.Core -v "$(GDAL_VERSION).$(PACKAGE_BUILD_NUMBER_OSX)" -s $(NUGET_)
	-cd $(TEST_DIR_APP)
	-dotnet add package MaxRev.Gdal.Core -v "$(GDAL_VERSION).$(PACKAGE_BUILD_NUMBER_OSX)" -s $(NUGET_)
	-cd $(TEST_DIR)
	-dotnet add package MaxRev.Gdal.WindowsRuntime.Minimal -v "$(GDAL_VERSION).$(PACKAGE_BUILD_NUMBER)" -s $(NUGET_) 
	-dotnet add package MaxRev.Gdal.Core -v "$(GDAL_VERSION).$(PACKAGE_BUILD_NUMBER)" -s $(NUGET_)
	-cd $(MAKEDIR)

test-only: test-restore
	-cd $(TEST_DIR)
!IF "$(ESSENTIAL_ONLY)" == "1"
	-dotnet test --no-restore --filter GdalDoesNotFailOnMakeValid
!ELSE
	-dotnet test --no-restore
!ENDIF
	-cd $(MAKEDIR)

test: test-restore test-update test-only
