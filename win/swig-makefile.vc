#
#  gdal.netcore package automation
#

!INCLUDE RID.opt
!INCLUDE ..\shared\GdalCore.opt

back = $(MAKEDIR)
OUTPUT = $(ROOTDIR_)\runtimes\win-x64\native
GDAL_CMAKE_ROOT=$(ROOTDIR_)\build-win\gdal-cmake-temp
GDAL_ROOT=$(ROOTDIR_)\build-win\gdal-source
source = $(GDAL_CMAKE_ROOT)\swig\csharp 
OUTC = $(source)
BINDING = csharp
SWIGARGS=-DSWIG2_CSHARP -Wall -I$(SWIG_INCLUDE_)/include -I$(SWIG_INCLUDE_)/csharp -I$(SWIG_INCLUDE_)/..
gdal_swig_include = $(GDAL_ROOT)\swig\include
bindings_out = $(back)\bindings

interface:
# windows makefiles in gdal are hardcoded to source directory.
# we won't move bindings here, so building all up in sources
	cd  "$(source)\const"
	$(SWIG) -$(BINDING) -namespace OSGeo.GDAL -dllimport gdalconst_wrap -o $(source)\const\gdalconst_wrap.c $(gdal_swig_include)\gdalconst.i
	cd  "$(source)\gdal"
	$(SWIG)  $(SWIGARGS) -c++ -$(BINDING) -namespace OSGeo.GDAL  -dllimport gdal_wrap -I$(gdal_swig_include)\$(BINDING) -o $(source)\gdal\gdal_wrap.cpp $(gdal_swig_include)\gdal.i
	cd  "$(source)\osr"
	$(SWIG)  $(SWIGARGS) -c++ -$(BINDING) -namespace OSGeo.OSR  -dllimport osr_wrap -I$(gdal_swig_include)\$(BINDING) -o $(source)\osr\osr_wrap.cpp $(gdal_swig_include)\osr.i
	cd  "$(source)\ogr"
	$(SWIG)  $(SWIGARGS) -c++ -$(BINDING) -namespace OSGeo.OGR -dllimport ogr_wrap -I$(gdal_swig_include)\$(BINDING) -o $(source)\ogr\ogr_wrap.cpp $(gdal_swig_include)\ogr.i	
	cd $(back)
	
# copy generatated c# sources to project directory 
# to make them available for windows package build

	$(DEL_DIR) "$(bindings_out)"
	@if not exist "$(bindings_out)" -mkdir "$(bindings_out)"
	
	$(COPY) "$(source)\const\*.cs" "$(bindings_out)\const\*"
	$(COPY) "$(source)\gdal\*.cs" "$(bindings_out)\gdal\*"
	$(COPY) "$(source)\osr\*.cs" "$(bindings_out)\osr\*"
	$(COPY) "$(source)\ogr\*.cs" "$(bindings_out)\ogr\*"